[BluRouter]

# Address of BluRouter
udp_ip         = 192.168.0.1
# Subnet that BluRouter is willing to listen to
udp_subnet     = 192.168.0.0/24
# Where BluRouter sends its packets
udp_broadcast  = 192.168.0.255
# Which port to operate at (Everyone must share this)
udp_port       = 12345

# Comma delimited: x.x.x.x/x, y.y.y.y/y, ...
# Ranges to allow blurouter to add routes to
allow_ranges   = 192.168.0.0/16
# Networks that are not to be affected by blurouter (inside allow_ranges)
protected_nets = 192.168.0.0/24

# Syslog priority
# log_notice, log_emerg, log_alert,
# log_crit,   log_err,   log_warning,
# log_notice, log_info,  log_debug
syslog_pri     = log_notice
# Syslog facility
# log_kern,   log_user,   log_mail,
# log_daemon, log_auth.   log_lpr,
# log_news,   log_uucp,   log_cron,
# log_syslog, log_local0, log_local1,
# log_local2, log_local3, log_local4,
# log_local5, log_local6, log_local7
syslog_facil   = log_user

# Must be an absolute path.
# Contains the routes to share, in the form of:
# x.x.x.x/x
# y.y.y.y/y
routefile      = /path/to/routes.txt
pidfile        = /path/to/router.pid

# Little endian (amd64 / x86)
endian         = 0
# Big endian (if above doesn't work)
#endian        = 1

# Options you shouldn't touch unless you know what you are doing:

# hello_interval:
# Seconds between sending route advertisements
# Less = more network spam
# more = slow reaction time
# We also automatically send hello if you change routes.txt,
# which happens at least every select_timeout seconds.
hello_interval = 30

# hello_timeout:
# For the remote end: How long time can we be silent before we are assumed dead?
# setting 100 means we have a max of 100 seconds (2 lost packets) before we are assumed to be dead
# You can set this based on how intolerant to network loss you can be;
# if you do not tolerate losses,    set it between 1-2 intervals.
# If you tolerate one lost packet,  set it between 2-3 intervals.
# If you tolerate two lost packets, set it between 3-4 intervals.
hello_timeout  = 100

# select_timeout:
# Give up on select every second
# This controls how often the timed code runs
# A low value is nice because:
#  - I don't think each round is very very expensive
#  - It keeps the program responsive
# This parameter controls the minimum intervals of
#  - How often we check if we need to send hello messages
#  - How often we read the routes file
#  - How often we check the neighbors for timeouts
# Try to keep it at most half of hello_interval
# Do not set it to 0 as it means infinite
select_timeout = 1

# max_ttl:
# This is how long someone can be offline without us assuming they are still online
# We will never let someone say they can be silent for more than an hour
max_ttl        = 3600

# newip_sendnets:
# Testing this behavior:
# When we receive hello from a new ip (expired or never seen before), we send our own hello packet back.
# The intended effect is that a new host entering the network is bootstrapped by us immediately.
# Normally, it takes up to 30 seconds before all routes are added.
# Potential problem: In a network of n machines starting up, minimum n**2 packets are sent.
# True or False
newip_sendnets = True
